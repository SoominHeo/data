생명의 정의에 관해서는 많은 논란이 있죠.

제가 말씀드릴 수 있는 것은, 생명은 어떤 연산을 한다는 것입니다.

이것은 컴퓨터 프로그램인데요.

세포에서 부팅이 돼서 프로그램이 실행되면 그것은 이런 사람을 만들 수 있고 아니면 약간의 변화로 이런 사람이 될 수도 있고 또 다른 작은 변화로 이런 사람, 약간 많이 변하면 이런 개, 아니면 이런 나무나 고래가 될 수도 있습니다.

그래서 여러분이 유전자와 프로그램에 대한 이 비유를 진지하게 받아들이신다면, 저기 있는 크리스 앤더슨씨도 (TED 큐레이터) 컴퓨터가 만들어낸 하나의 가공인물이 되는 것이고, 그건 짐 왓슨이나 (DNA 구조발견자) 크레이그 벤더나 (인간 게놈관련 생물학자) 우리나 모두 마찬가지가 됩니다.

그래서 이런 비유에 대해 좀 더 설명해드리자면, 사실 유전자 프로그램과 컴퓨터 프로그램 사이에는 굉장히 많은 유사성이 있어요.

작은 돌연변이가 평범한 파리의 날개를 네장으로 만들 수 있습니다.

또는 다리가 더듬이에서 뻗어나오도록 할 수도 있어요.

혹시 영화 프린세스 브라이드를 아신다면 (루겐 백작처럼) 여섯손가락을 가진 인간을 만들 수 있다는 것이죠.

품질보증된 컴퓨터 프로그램이라도 단지 이런 작은 변화에 민감하게 반응합니다.

가령 당신의 은행 계좌의 1달러를 숫자 하나만 바꾸면 그것은 천달러가 되죠.

그래서 제 생각에 이런 작은 변화들은 발생과정의 커다란 변화들 저변에 복잡한 연산이 깔려있다는 것을 암시합니다.

결국 생명작용에는 어떤 분자 프로그램이 존재하고 있고, 그것은 곧, 분자 프로그램의 힘을 나타냅니다.

그래서 제가 하고자 하는 것은 분자 프로그램을 만들어 잠재적인 기술을 창조하는 거에요.

세포 지향적이죠.

분자 프로그램을 만드는 저희쪽 사람들은 일종의 생체분자 중심적인 방법을 씁니다.

자, 이것은 세포 안에 있는 기계들입니다.

여기 있는 건 카메라고요.

저희 분자 프로그래머들은 DNA를 이용해 이런 것들을 재현하려고 합니다.

저희들은 DNA 광신자가 아니지만, DNA는 저렴하고 잘 알려진 물질이고 그래서 프로그램하기도 쉽습니다.

그리고 다른 것들도 다루기 쉬워진다면 아마 단백질같은 것도 저희가 사용할 수 있겠죠.

만약 우리가 성공한다면 분자 프로그램은 어떤 걸 보여줄까요?

만일 당신이 그 씨앗에 물을 주고 양분을 공급해 주면 그것은 발생학적인 연산을 거치게 되는데, 바로 그 분자 연산으로 전자식 컴퓨터가 만들어집니다.

이와 비슷한 건 많이 있어요.

크레이그 벤더의 질문도 그 중 하나입니다.

(웃음) 혹은 컴퓨터 프로그램이 언제 멈출지를 어떻게 아는가?

이런 게 오늘날 컴퓨터 공학에서의 큰 질문들이에요.

그 중 대부분은, 답을 찾는게 불가능하죠.

그치만 우리는 일부에 대해서 답을 찾기 시작했어요.

두 가닥의 이중 나선은, 아데닌(A), 티민(T), 시토신(C), 구아닌(G)이 짝을 이루어 서로를 지탱합니다.

하지만 이런 방식은 멋있을 지는 몰라도 시간이 오래 걸립니다.

만드는데만 수년이 걸리거나 아예 구상 자체가 어렵거든요.

바로 이런 식으로 말입니다.

이런 작용들이 여러번 반복되다보면 그것은 직사각형처럼 접을 수도 있는겁니다.

그리고 이들을 서로 잘 섞어요.

열을 가하면서 소금도 약간 넣어주고, 거의 끓는점까지 끓였다가 식혀주면 그렇게 식어가는 동안에 짧은 가닥들이 긴 가닥에 붙어서 점점 형태를 갖추어 갑니다.

저기에 조금씩 이중 나선이 생겨나고 있죠.

DNA를 접어서 이렇게 눈 위로 올라가고 코로 내려왔다가 다시 올라가고 이마를 둘러서 내려와 이런 작은 고리까지요.

그래서 만약 이게 가능하다면 다른 어떤 모양도 되겠다 생각했습니다.

저는 짧은 스테이플을 디자인하는 컴퓨터 프로그램을 만들었죠.

DNA는 주문만하면 페덱스로 날아오거든요.

그것을 모두 섞어서, 가열했다 식히면 작은 스마일 500억개 정도가 물 한 방울 안에 떠다니게 됩니다.

이 하나하나는 겨우 머리카락 굵기의 1/1000정도죠, 감이 오세요?

그래서 용액 속에서 흘러다니는 이들을 관찰하려면 여러분들은 우선 그들을 표면에 잘 붙여야 해요.

그런 뒤에 스마일을 바깥으로 쏟아부으면 끈적하게 처리한 표면에 달라붙기 시작하고, 우리는 원자현미경을 이용해서 사진을 찍습니다.

원자현미경은 작은 탐침을 갖고 있는데 탐침은 표면에서 왔다갔다 하며 부딪힘으로써 위 아래의 높이를 파악하는 장치입니다.

DNA 종이접기를 느끼는 거죠.

원자현미경이 작동하면, 이렇게 대략적인 모습을 볼 수 있습니다.

이걸 확대하면 보시다시피 턱이 머리 위로 올라간 것도 있고 코를 얻어맞아서 떨어져 나간 것도 있지만, 대체로 잘 되었습니다.

이 방법의 강점은 누구든지 쉽게 할 수 있다는 겁니다.

중국입니다, 그렇죠?

(웃음) 이 작업은 아주 성공률이 높아서 패턴 뿐 아니라 어떤 모양도 만들 수 있습니다.

미국 지도도 그릴 수 있고 DNA로 DNA라고 쓸 수도 있어요.

그런데 정말로 끝내주는 게 뭐냐하면 사실상 나노 예술작품처럼 보이는 이 모든 게 당신이 필요로하는 나노회로가 될 수도 있다는 사실입니다.

여러분은 스테이플에 전구나 스위치 같은 회로부품을 장착시킵니다.

그것을 조립시키면 이런 회로가 만들어지죠.

그런 다음 DNA를 씻어내면 회로만 남게됩니다.

그래서 이건 칼텍에 있는 동료들과 함께 한 작업이에요.

DNA 종이접기를 이용해 탄소나노튜브를 조직하고 여기 보이는 것처럼 작은 스위치를 만들어 선에 연결한 뒤 실험으로 실제 스위치가 작동한다는 것을 증명했죠.

그래서 작은 컴퓨터를 만들기에는 딱이죠.

이제, 다시 변환장치 이야기로 돌아가 봅시다.

DNA 종이접기는 변환장치 작동의 증거가 되기도 하는데요.

그것을 분자로 변환하려면 합성장치로 보내면 되고 그러면 실제로 작동하죠.

여러분은 각자의 분자 변환장치를 가지고 있고 원하는 것은 어떤것도 할 수가 있습니다.

그것은 사실이지만 우리는 규모를 고려하지 않았죠.

만약 DNA 종이접기로 인간을 구성하려 한다면 당신은 길이가 10자나 되는 (자는 0이 24개나 붙는 큰 단위) 어마어마한 가닥을 찾아야하는 문제에 부딪힙니다.

그 정도의 DNA길이면 빛의 속도로도 3광년은 걸리는데 그걸 하기란 불가능하죠.

그래서 우리는 또다른 기술인 단계적 자가조립법으로 관심을 돌렸습니다.

확대해서 보면, 이것은 단지 네 개의 DNA 가닥인데 그것의 말단은 단일 가닥이어서 다른 타일의 상대되는 단일 가닥과 묶이기도 합니다.

그러면 우리는 이 타일로 정사각형을 그릴 수도 있겠죠.

이들 DNA 조각들이 붙는 말단은 거의 체크판 패턴처럼 보입니다.

타일들은 이런 식으로 복잡한 자가조립 체크판을 만들죠.

만일 이 시점에서 알아차리지 못하셨다면, 이 타일 하나하나가 분자 프로그램이고 그들이 패턴을 산출했다는 것을 기억해주세요.

그것은 여러분이 제안한 타일 세트가 서로 합쳐질때 체크판이라기보다는 2진 계수기의 형태가 됩니다.

그래서 이진법으로 쓰여진 숫자 5, 6, 7을 읽어내야 하죠.

32라고 암호화된 DNA 종이접기를 오른편에 두고 그 타일들을 첨가하면, 집계가 시작되고 32를 읽는 순간 그것은 멈추게 될 것입니다.

집계되니 않을 때가 성장을 끝난 때죠.

이것이 얼마나 대단한 일인지 압니다.

이건 제가 이야기한 첫번재 질문에 대한 답이죠.

그러나 그렇다고 아기의 경우에도 해당되는 것은 아닙니다.

아무튼 우리는 더 큰 DNA 종이접기를 가지고 다른 방식으로 이 집계를 시도해봤어요.

카운터는 암호화된 숫자만큼의 템플릿을 제공해서 중앙을 채우게 되죠.

그러나 더 중요한 것은, 그것이 재프로그램하기 쉽다는 사실이었습니다.

여러분은 단지 DNA 가닥의 2진수 표현을 32에서 96으로 바꾸는 것으로 그것을 얻을 수 있어요.

32때와 같은 크기의 종이접기로 시작하지만 결과는 세배 크죠.

자, 저는 지금까지 이 개요의 발전에 대해서 말씀드렸습니다.

당신은 매우 섬세한 컴퓨터 프로그램을 가지고 있어서 그것은 작은 변화에도, 예를 들면 하나의 매우 약한 변이에도 어떤 1크기의 정사각형이라든가 더 큰 무언가를 만들어내죠.

이제, 이런 발전적인 과정에 의해서 연산에 집계방식을 사용하고 그것을 구축하는 것은 크레이그 벤더의 질문과도 관계됩니다.

만일 우리가 원하는 정사각형의 크기가 10, 100 또는 1000정도고 DNA 종이접기만을 사용한다고 했을 때 그 정사각형을 만들려면 그 크기만큼의 DNA 가닥이 들게 되고, 따라서 100, 1000 또는 1000000의 DNA 가닥이 필요하게 됩니다.

그것은 실제로 감당할 수 없는 수준이죠.

그러나 약간의 연산을 사용한다면, 종이접기에 타일을 더해 집계하는 법을 쓴다면 우리는 100, 200, 300개의 DNA 가닥으로도 해낼 수 있어요.

그렇게 집계방식을 이용해 연산을 하면 DNA 가닥을 기하급수적으로 절약할 수 있죠.

결과적으로 저는 컴퓨터를 설계하는 컴퓨터라는 독창적인 아이디어로 돌아갑니다.

만약 여러분이 그 종이접기와 카운터에 의해 자란 정사각형을 본다면, 그 패턴이 거의 당신이 생각했던 패턴과 같다는 것을 알 수 있을 거에요.

약간의 연산으로 복잡한 회로를 만드는 게 가능합니다.

여러분들을 그걸 세어 볼 수도 있어요.

(웃음) 혹은 컴퓨터 프로그램이 언제 멈출지를 어떻게 아는가?

우리는 이 아이디어를 9년 전부터 갖고 있었는데요, 지나 온 시간에 비례하게 우리는 많은 진보를 했습니다.

이런 에러를 고치기 위한 묘안도 생각해냈고요.

그래서 제 생각에 향후 5에서 10년이면 우리는 그런 사각형에서 자가조립하는 회로를 얻을 수 있을 겁니다.

그래서 지금, 제가 이 강연으로 말씀드리려 하는 건 뭘까요?

이것도 꽤 근사한 일입니다만 저는 당신이 이 강연에서 가져가는 것이 그러한 큰 질문들로부터 깨달은 것이 그저 가젯을 만드는 분자 프로그램이 아니길 바랍니다.

이것은 단지 자가조립하는 휴대폰이나 회로를 만드는 것이 아니에요.

