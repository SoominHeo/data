id="t-0"&&Today I'd like to show you the future of the way we make things.
id="t-4000"&&I believe that soon our buildings and machines will be self-assembling, replicating and repairing themselves.
id="t-10000"&&So I'm going to show you what I believe is the current state of manufacturing, and then compare that to some natural systems. 

id="t-17000"&&So in the current state of manufacturing, we have skyscrapers -- two and a half years [of assembly time], 500,000 to a million parts, fairly complex, new, exciting technologies in steel, concrete, glass.
id="t-29000"&&We have exciting machines that can take us into space -- five years [of assembly time], 2.5 million parts. 

id="t-36000"&&But on the other side, if you look at the natural systems, we have proteins that have two million types, can fold in 10,000 nanoseconds, or DNA with three billion base pairs we can replicate in roughly an hour.
id="t-50000"&&So there's all of this complexity in our natural systems, but they're extremely efficient, far more efficient than anything we can build, far more complex than anything we can build.
id="t-60000"&&They're far more efficient in terms of energy.
id="t-62000"&&They hardly ever make mistakes.
id="t-65000"&&And they can repair themselves for longevity. 

id="t-67000"&&So there's something super interesting about natural systems.
id="t-70000"&&And if we can translate that into our built environment, then there's some exciting potential for the way that we build things.
id="t-76000"&&And I think the key to that is self-assembly. 

id="t-79000"&&So if we want to utilize self-assembly in our physical environment, I think there's four key factors.
id="t-84000"&&The first is that we need to decode all of the complexity of what we want to build -- so our buildings and machines.
id="t-90000"&&And we need to decode that into simple sequences -- basically the DNA of how our buildings work.
id="t-94000"&&Then we need programmable parts that can take that sequence and use that to fold up, or reconfigure.
id="t-101000"&&We need some energy that's going to allow that to activate, allow our parts to be able to fold up from the program.
id="t-107000"&&And we need some type of error correction redundancy to guarantee that we have successfully built what we want. 

id="t-10000"&&So I'm going to show you a number of projects that my colleagues and I at MIT are working on to achieve this self-assembling future.
id="t-118000"&&The first two are the MacroBot and DeciBot.
id="t-121000"&&So these projects are large-scale reconfigurable robots -- 8 ft., 12 ft. long proteins.
id="t-128000"&&They're embedded with mechanical electrical devices, sensors.
id="t-131000"&&You decode what you want to fold up into, into a sequence of angles -- so negative 120, negative 120, 0, 0, 120, negative 120 -- something like that; so a sequence of angles, or turns, and you send that sequence through the string.
id="t-145000"&&Each unit takes its message -- so negative 120 -- it rotates to that, checks if it got there and then passes it to its neighbor. 

id="t-153000"&&So these are the brilliant scientists, engineers, designers that worked on this project.
id="t-157000"&&And I think it really brings to light: Is this really scalable?
id="t-161000"&&I mean, thousands of dollars, lots of man hours made to make this eight-foot robot.
id="t-161000"&&I mean, thousands of dollars, lots of man hours made to make this eight-foot robot.
id="t-161000"&&I mean, thousands of dollars, lots of man hours made to make this eight-foot robot.
id="t-169000"&&The next one questions that and looks at passive nature, or passively trying to have reconfiguration programmability.
id="t-176000"&&But it goes a step further, and it tries to have actual computation.
id="t-180000"&&It basically embeds the most fundamental building block of computing, the digital logic gate, directly into your parts. 

id="t-186000"&&So this is a NAND gate.
id="t-188000"&&You have one tetrahedron which is the gate that's going to do your computing, and you have two input tetrahedrons.
id="t-194000"&&One of them is the input from the user, as you're building your bricks.
id="t-197000"&&The other one is from the previous brick that was placed.
id="t-200000"&&And then it gives you an output in 3D space.
id="t-203000"&&So what this means is that the user can start plugging in what they want the bricks to do.
id="t-208000"&&It computes on what it was doing before and what you said you wanted it to do.
id="t-212000"&&And now it starts moving in three-dimensional space -- so up or down.
id="t-216000"&&So on the left-hand side, [1,1] input equals 0 output, which goes down.
id="t-219000"&&On the right-hand side, [0,0] input is a 1 output, which goes up.
id="t-224000"&&And so what that really means is that our structures now contain the blueprints of what we want to build. 

id="t-230000"&&So they have all of the information embedded in them of what was constructed.
id="t-233000"&&So that means that we can have some form of self-replication.
id="t-236000"&&In this case I call it self-guided replication, because your structure contains the exact blueprints.
id="t-241000"&&If you have errors, you can replace a part.
id="t-243000"&&All the local information is embedded to tell you how to fix it.
id="t-246000"&&So you could have something that climbs along and reads it and can output at one to one.
id="t-250000"&&It's directly embedded; there's no external instructions. 

id="t-252000"&&So the last project I'll show is called Biased Chains, and it's probably the most exciting example that we have right now of passive self-assembly systems.
id="t-260000"&&So it takes the reconfigurability and programmability and makes it a completely passive system.
id="t-268000"&&So basically you have a chain of elements.
id="t-270000"&&Each element is completely identical, and they're biased.
id="t-274000"&&So each chain, or each element, wants to turn right or left.
id="t-277000"&&So as you assemble the chain, you're basically programming it.
id="t-280000"&&You're telling each unit if it should turn right or left.
id="t-283000"&&So when you shake the chain, it then folds up into any configuration that you've programmed in -- so in this case, a spiral, or in this case, two cubes next to each other.
id="t-299000"&&So you can basically program any three-dimensional shape -- or one-dimensional, two-dimensional -- up into this chain completely passively. 

id="t-306000"&&So what does this tell us about the future?
id="t-308000"&&I think that it's telling us that there's new possibilities for self-assembly, replication, repair in our physical structures, our buildings, machines.
id="t-316000"&&There's new programmability in these parts.
id="t-318000"&&And from that you have new possibilities for computing.
id="t-320000"&&We'll have spatial computing.
id="t-322000"&&Imagine if our buildings, our bridges, machines, all of our bricks could actually compute.
id="t-326000"&&That's amazing parallel and distributed computing power, new design possibilities.
id="t-330000"&&So it's exciting potential for this.
id="t-332000"&&So I think these projects I've showed here are just a tiny step towards this future, if we implement these new technologies for a new self-assembling world. 

id="t-340000"&&Thank you. 

id="t-342000"&&(Applause) 

