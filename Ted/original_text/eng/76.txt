id="t-800"&&So, I lead a team at Google that works on machine intelligence; in other words, the engineering discipline of making computers and devices able to do some of the things that brains do.
id="t-11439"&&And this makes us interested in real brains and neuroscience as well, and especially interested in the things that our brains do that are still far superior to the performance of computers. 

id="t-25209"&&Historically, one of those areas has been perception, the process by which things out there in the world -- sounds and images -- can turn into concepts in the mind.
id="t-36235"&&This is essential for our own brains, and it's also pretty useful on a computer.
id="t-41636"&&The machine perception algorithms, for example, that our team makes, are what enable your pictures on Google Photos to become searchable, based on what's in them.
id="t-51594"&&The flip side of perception is creativity: turning a concept into something out there into the world.
id="t-58173"&&So over the past year, our work on machine perception has also unexpectedly connected with the world of machine creativity and machine art. 

id="t-68556"&&I think Michelangelo had a penetrating insight into to this dual relationship between perception and creativity.
id="t-76023"&&This is a famous quote of his: "Every block of stone has a statue inside of it, and the job of the sculptor is to discover it."
id="t-86029"&&So I think that what Michelangelo was getting at is that we create by perceiving, and that perception itself is an act of imagination and is the stuff of creativity. 

id="t-98691"&&The organ that does all the thinking and perceiving and imagining, of course, is the brain.
id="t-105089"&&And I'd like to begin with a brief bit of history about what we know about brains.
id="t-110496"&&Because unlike, say, the heart or the intestines, you really can't say very much about a brain by just looking at it, at least with the naked eye.
id="t-117983"&&The early anatomists who looked at brains gave the superficial structures of this thing all kinds of fanciful names, like hippocampus, meaning "little shrimp."
id="t-126711"&&But of course that sort of thing doesn't tell us very much about what's actually going on inside. 

id="t-132780"&&The first person who, I think, really developed some kind of insight into what was going on in the brain was the great Spanish neuroanatomist, Santiago Ramón y Cajal, in the 19th century, who used microscopy and special stains that could selectively fill in or render in very high contrast the individual cells in the brain, in order to start to understand their morphologies.
id="t-157972"&&And these are the kinds of drawings that he made of neurons in the 19th century. 

id="t-162120"&&This is from a bird brain.
id="t-164028"&&And you see this incredible variety of different sorts of cells, even the cellular theory itself was quite new at this point.
id="t-170568"&&And these structures, these cells that have these arborizations, these branches that can go very, very long distances -- this was very novel at the time.
id="t-178779"&&They're reminiscent, of course, of wires.
id="t-181706"&&That might have been obvious to some people in the 19th century; the revolutions of wiring and electricity were just getting underway.
id="t-189964"&&But in many ways, these microanatomical drawings of Ramón y Cajal's, like this one, they're still in some ways unsurpassed. 

id="t-196859"&&We're still more than a century later, trying to finish the job that Ramón y Cajal started.
id="t-201586"&&These are raw data from our collaborators at the Max Planck Institute of Neuroscience.
id="t-207649"&&And what our collaborators have done is to image little pieces of brain tissue.
id="t-214488"&&The entire sample here is about one cubic millimeter in size, and I'm showing you a very, very small piece of it here.
id="t-220483"&&That bar on the left is about one micron.
id="t-222853"&&The structures you see are mitochondria that are the size of bacteria.
id="t-227354"&&And these are consecutive slices through this very, very tiny block of tissue.
id="t-232101"&&Just for comparison's sake, the diameter of an average strand of hair is about 100 microns.
id="t-238344"&&So we're looking at something much, much smaller than a single strand of hair. 

id="t-242064"&&And from these kinds of serial electron microscopy slices, one can start to make reconstructions in 3D of neurons that look like these.
id="t-251151"&&So these are sort of in the same style as Ramón y Cajal.
id="t-254332"&&Only a few neurons lit up, because otherwise we wouldn't be able to see anything here.
id="t-258653"&&It would be so crowded, so full of structure, of wiring all connecting one neuron to another. 

id="t-265293"&&So Ramón y Cajal was a little bit ahead of his time, and progress on understanding the brain proceeded slowly over the next few decades.
id="t-273455"&&But we knew that neurons used electricity, and by World War II, our technology was advanced enough to start doing real electrical experiments on live neurons to better understand how they worked.
id="t-284631"&&This was the very same time when computers were being invented, very much based on the idea of modeling the brain -- of "intelligent machinery," as Alan Turing called it, one of the fathers of computer science. 

id="t-297923"&&Warren McCulloch and Walter Pitts looked at Ramón y Cajal's drawing of visual cortex, which I'm showing here.
id="t-305506"&&This is the cortex that processes imagery that comes from the eye.
id="t-310424"&&And for them, this looked like a circuit diagram.
id="t-314353"&&So there are a lot of details in McCulloch and Pitts's circuit diagram that are not quite right.
id="t-319588"&&But this basic idea that visual cortex works like a series of computational elements that pass information one to the next in a cascade, is essentially correct. 

id="t-329259"&&Let's talk for a moment about what a model for processing visual information would need to do.
id="t-336228"&&The basic task of perception is to take an image like this one and say, "That's a bird," which is a very simple thing for us to do with our brains.
id="t-347309"&&But you should all understand that for a computer, this was pretty much impossible just a few years ago.
id="t-353865"&&The classical computing paradigm is not one in which this task is easy to do. 

id="t-359366"&&So what's going on between the pixels, between the image of the bird and the word "bird," is essentially a set of neurons connected to each other in a neural network, as I'm diagramming here.
id="t-371258"&&This neural network could be biological, inside our visual cortices, or, nowadays, we start to have the capability to model such neural networks on the computer.
id="t-379834"&&And I'll show you what that actually looks like. 

id="t-382211"&&So the pixels you can think about as a first layer of neurons, and that's, in fact, how it works in the eye -- that's the neurons in the retina.
id="t-389601"&&And those feed forward into one layer after another layer, after another layer of neurons, all connected by synapses of different weights.
id="t-397609"&&The behavior of this network is characterized by the strengths of all of those synapses.
id="t-402276"&&Those characterize the computational properties of this network.
id="t-405588"&&And at the end of the day, you have a neuron or a small group of neurons that light up, saying, "bird."

id="t-411824"&&Now I'm going to represent those three things -- the input pixels and the synapses in the neural network, and bird, the output -- by three variables: x, w and y.
id="t-424853"&&There are maybe a million or so x's -- a million pixels in that image.
id="t-428665"&&There are billions or trillions of w's, which represent the weights of all these synapses in the neural network.
id="t-434580"&&And there's a very small number of y's, of outputs that that network has.
id="t-438361"&&"Bird" is only four letters, right?
id="t-441088"&&So let's pretend that this is just a simple formula, x "x" w = y. I'm putting the times in scare quotes because what's really going on there, of course, is a very complicated series of mathematical operations. 

id="t-455172"&&That's one equation.
id="t-456417"&&There are three variables.
id="t-458113"&&And we all know that if you have one equation, you can solve one variable by knowing the other two things.
id="t-465158"&&So the problem of inference, that is, figuring out that the picture of a bird is a bird, is this one: it's where y is the unknown and w and x are known.
id="t-476240"&&You know the neural network, you know the pixels.
id="t-478723"&&As you can see, that's actually a relatively straightforward problem.
id="t-482074"&&You multiply two times three and you're done.
id="t-484862"&&I'll show you an artificial neural network that we've built recently, doing exactly that. 

id="t-489634"&&This is running in real time on a mobile phone, and that's, of course, amazing in its own right, that mobile phones can do so many billions and trillions of operations per second.
id="t-500619"&&What you're looking at is a phone looking at one after another picture of a bird, and actually not only saying, "Yes, it's a bird," but identifying the species of bird with a network of this sort.
id="t-512890"&&So in that picture, the x and the w are known, and the y is the unknown.
id="t-518566"&&I'm glossing over the very difficult part, of course, which is how on earth do we figure out the w, the brain that can do such a thing?
id="t-527194"&&How would we ever learn such a model? 

id="t-529418"&&So this process of learning, of solving for w, if we were doing this with the simple equation in which we think about these as numbers, we know exactly how to do that: 6 = 2 x w, well, we divide by two and we're done.
id="t-544001"&&The problem is with this operator.
id="t-546823"&&So, division -- we've used division because it's the inverse to multiplication, but as I've just said, the multiplication is a bit of a lie here.
id="t-555080"&&This is a very, very complicated, very non-linear operation; it has no inverse.
id="t-560158"&&So we have to figure out a way to solve the equation without a division operator.
id="t-565380"&&And the way to do that is fairly straightforward.
id="t-567747"&&You just say, let's play a little algebra trick, and move the six over to the right-hand side of the equation.
id="t-573372"&&Now, we're still using multiplication.
id="t-575675"&&And that zero -- let's think about it as an error.
id="t-579279"&&In other words, if we've solved for w the right way, then the error will be zero.
id="t-583498"&&And if we haven't gotten it quite right, the error will be greater than zero. 

id="t-587233"&&So now we can just take guesses to minimize the error, and that's the sort of thing computers are very good at.
id="t-593334"&&So you've taken an initial guess: what if w = 0?
id="t-596131"&&Well, then the error is 6.
id="t-596131"&&Well, then the error is 6.
id="t-596131"&&Well, then the error is 6.
id="t-598865"&&And then the computer can sort of play Marco Polo, and drive down the error close to zero.
id="t-603647"&&As it does that, it's getting successive approximations to w. Typically, it never quite gets there, but after about a dozen steps, we're up to w = 2.999, which is close enough.
id="t-616302"&&And this is the learning process. 

id="t-618140"&&So remember that what's been going on here is that we've been taking a lot of known x's and known y's and solving for the w in the middle through an iterative process.
id="t-628774"&&It's exactly the same way that we do our own learning.
id="t-632354"&&We have many, many images as babies and we get told, "This is a bird; this is not a bird."
id="t-637714"&&And over time, through iteration, we solve for w, we solve for those neural connections. 

id="t-643460"&&So now, we've held x and w fixed to solve for y; that's everyday, fast perception.
id="t-649441"&&We figure out how we can solve for w, that's learning, which is a lot harder, because we need to do error minimization, using a lot of training examples. 

id="t-656875"&&And about a year ago, Alex Mordvintsev, on our team, decided to experiment with what happens if we try solving for x, given a known w and a known y.
id="t-666124"&&In other words, you know that it's a bird, and you already have your neural network that you've trained on birds, but what is the picture of a bird?
id="t-675034"&&It turns out that by using exactly the same error-minimization procedure, one can do that with the network trained to recognize birds, and the result turns out to be ... a picture of birds.
id="t-692814"&&So this is a picture of birds generated entirely by a neural network that was trained to recognize birds, just by solving for x rather than solving for y, and doing that iteratively. 

id="t-703732"&&Here's another fun example.
id="t-705603"&&This was a work made by Mike Tyka in our group, which he calls "Animal Parade."
id="t-711396"&&It reminds me a little bit of William Kentridge's artworks, in which he makes sketches, rubs them out, makes sketches, rubs them out, and creates a movie this way.
id="t-719715"&&In this case, what Mike is doing is varying y over the space of different animals, in a network designed to recognize and distinguish different animals from each other.
id="t-728431"&&And you get this strange, Escher-like morph from one animal to another. 

id="t-734221"&&Here he and Alex together have tried reducing the y's to a space of only two dimensions, thereby making a map out of the space of all things recognized by this network.
id="t-746847"&&Doing this kind of synthesis or generation of imagery over that entire surface, varying y over the surface, you make a kind of map -- a visual map of all the things the network knows how to recognize.
id="t-757335"&&The animals are all here; "armadillo" is right in that spot. 

id="t-760919"&&You can do this with other kinds of networks as well.
id="t-763422"&&This is a network designed to recognize faces, to distinguish one face from another.
id="t-768344"&&And here, we're putting in a y that says, "me," my own face parameters.
id="t-773216"&&And when this thing solves for x, it generates this rather crazy, kind of cubist, surreal, psychedelic picture of me from multiple points of view at once.
id="t-783870"&&The reason it looks like multiple points of view at once is because that network is designed to get rid of the ambiguity of a face being in one pose or another pose, being looked at with one kind of lighting, another kind of lighting.
id="t-796239"&&So when you do this sort of reconstruction, if you don't use some sort of guide image or guide statistics, then you'll get a sort of confusion of different points of view, because it's ambiguous.
id="t-807786"&&This is what happens if Alex uses his own face as a guide image during that optimization process to reconstruct my own face.
id="t-816284"&&So you can see it's not perfect.
id="t-818636"&&There's still quite a lot of work to do on how we optimize that optimization process.
id="t-823011"&&But you start to get something more like a coherent face, rendered using my own face as a guide. 

id="t-828892"&&You don't have to start with a blank canvas or with white noise.
id="t-832597"&&When you're solving for x, you can begin with an x, that is itself already some other image.
id="t-837838"&&That's what this little demonstration is.
id="t-840418"&&This is a network that is designed to categorize all sorts of different objects -- man-made structures, animals ...
id="t-847707"&&Here we're starting with just a picture of clouds, and as we optimize, basically, this network is figuring out what it sees in the clouds.
id="t-856931"&&And the more time you spend looking at this, the more things you also will see in the clouds.
id="t-863004"&&You could also use the face network to hallucinate into this, and you get some pretty crazy stuff. 

id="t-868239"&&(Laughter) 

id="t-870401"&&Or, Mike has done some other experiments in which he takes that cloud image, hallucinates, zooms, hallucinates, zooms hallucinates, zooms.
id="t-880629"&&And in this way, you can get a sort of fugue state of the network, I suppose, or a sort of free association, in which the network is eating its own tail.
id="t-891458"&&So every image is now the basis for, "What do I think I see next?
id="t-891458"&&So every image is now the basis for, "What do I think I see next?
id="t-891458"&&So every image is now the basis for, "What do I think I see next?

id="t-899487"&&I showed this for the first time in public to a group at a lecture in Seattle called "Higher Education" -- this was right after marijuana was legalized. 

id="t-868239"&&(Laughter) 

id="t-914627"&&So I'd like to finish up quickly by just noting that this technology is not constrained.
id="t-921034"&&I've shown you purely visual examples because they're really fun to look at.
id="t-924723"&&It's not a purely visual technology.
id="t-927198"&&Our artist collaborator, Ross Goodwin, has done experiments involving a camera that takes a picture, and then a computer in his backpack writes a poem using neural networks, based on the contents of the image.
id="t-939136"&&And that poetry neural network has been trained on a large corpus of 20th-century poetry.
id="t-944365"&&And the poetry is, you know, I think, kind of not bad, actually. 

id="t-868239"&&(Laughter) 

id="t-949234"&&In closing, I think that per Michelangelo, I think he was right; perception and creativity are very intimately connected.
id="t-957611"&&What we've just seen are neural networks that are entirely trained to discriminate, or to recognize different things in the world, able to be run in reverse, to generate.
id="t-968047"&&One of the things that suggests to me is not only that Michelangelo really did see the sculpture in the blocks of stone, but that any creature, any being, any alien that is able to do perceptual acts of that sort is also able to create because it's exactly the same machinery that's used in both cases. 

id="t-986742"&&Also, I think that perception and creativity are by no means uniquely human.
id="t-992532"&&We start to have computer models that can do exactly these sorts of things.
id="t-996264"&&And that ought to be unsurprising; the brain is computational. 

id="t-999616"&&And finally, computing began as an exercise in designing intelligent machinery.
id="t-1005989"&&It was very much modeled after the idea of how could we make machines intelligent.
id="t-1011512"&&And we finally are starting to fulfill now some of the promises of those early pioneers, of Turing and von Neumann and McCulloch and Pitts.
id="t-1020154"&&And I think that computing is not just about accounting or playing Candy Crush or something.
id="t-1026447"&&From the beginning, we modeled them after our minds.
id="t-1029049"&&And they give us both the ability to understand our own minds better and to extend them. 

id="t-1034627"&&Thank you very much. 

id="t-1035818"&&(Applause) 

