id="t-0"&&25, 26년 전 매킨토시의 출현은 인터페이스와 컴퓨터 전반의 역사에 있어서 매우 놀랄만큼 중요한 사건이었습니다.
id="t-12000"&&이로 인해 사람들은 컴퓨터와 컴퓨터 처리에 대해 누가, 얼마나 많이, 어떻게 활용하게 될 것인지에 대한 생각을 근본적으로 바꾸게 되었습니다.
id="t-21000"&&이것은 매우 큰 변화였으며 실제로 초기의 매킨토시 개발팀은 82, 83, 84년도에 완전히 새로운 운영체제를 처음부터 만들어야만 했습니다.
id="t-30000"&&여기엔 흥미로운 작은 교훈이 있습니다.
id="t-32000"&&제 생각에는 이 교훈이 그 이후로 잊어버리거나 사라진 듯 합니다만, 그 교훈은 'OS는 인터페이스이고 인터페이스는 OS이다.'라는 것입니다.
id="t-41000"&&이건 마치 아더왕과 그 나라처럼 서로 분리될 수 없는 것입니다.
id="t-44000"&&그리고 새 운영체제를 만드는 일은 흔치 않습니다.
id="t-47000"&&이건 단순히 그래픽 처리부분을 일부 손 보는 문제가 아닙니다.
id="t-50000"&&그땐 그래픽 처리도 없었고 마우스도 없었습니다.
id="t-53000"&&그래서 그런 게 필요했습니다.

id="t-55000"&&그러나 그 뒤로 25년 동안 모든 핵심 기술들이 미친듯이 발전하는 것을 보아왔습니다.
id="t-61000"&&메모리 용량이나 디스크 용량 등이 1만배에서 100만배나 늘어났습니다.
id="t-67000"&&같은 일이 프로세서 속도에서도, 네트워크에서도 일어났습니다.

id="t-78000"&&그리고 물론 그래픽에서도 오늘날 베스트 바이에서 84.97달러면 10년전에 SGI社의 100만 달러짜리 제품보다 더 성능 좋은 그래픽 카드를 살 수 있습니다.
id="t-88000"&&믿기 힘들 정도의 발전입니다.
id="t-90000"&&또한 우리에겐 웹이 있으며 환상적인 클라우드 환경이 커져가고 있습니다.
id="t-96000"&&그런데 인터페이스는 근본적이냐는 점에 대해서는 일종의 혼란이 있습니다.
id="t-101000"&&우리는 새 인터페이스를 만드는 걸 잊어버렸습니다.
id="t-103000"&&확실히 최근에 많은 변화를 볼 수 있습니다.
id="t-105000"&&사람들이 깨어나기 시작했습니다.



id="t-111000"&&우리가 직면한 문제는 단 하나의 간단한 단어로 설명됩니다.

id="t-115000"&&또는 간단한 문구로 "현실 기하학"입니다.
id="t-119000"&&컴퓨터와 컴퓨터에 지시를 전달하는 프로그래밍 언어는 공간에 대해 끔찍할 정도로 무관심합니다.
id="t-126000"&&실제 공간을 인식하지 못하죠.
id="t-128000"&&우리가 공간을 잘 인식하는 걸 보면 재미있는 일입니다.
id="t-131000"&&컴퓨터는 시간도 이해하지 못하지만 이건 또 다른 얘기입니다.

id="t-134000"&&만약에 컴퓨터에게 공간을 설명하게 되면 어떻게 될까요?
id="t-141000"&&한가지 얻을 수 있는 건 Luminous Room 같은 겁니다.
id="t-144000"&&Luminous Room은 입출력이 같은 공간에서 시행되도록 고안된 시스템입니다.
id="t-150000"&&이건 신기할 정도로 간단하며 아직 다뤄지지 않은 분야입니다.
id="t-154000"&&마우스를 쓸 때, 손은 마우스 패드 위에 올려지죠.
id="t-157000"&&누구 말마따나 이건 같은 면이 아닙니다.
id="t-159000"&&화소는 화면에 올려지니까요.
id="t-161000"&&이 방에선 벽, 바닥, 천장, 애완동물, 화분 등 뭐가 있던 간에 구동이 가능합니다.
id="t-166000"&&볼 수 있을 뿐만 아니라 감지도 가능하죠.
id="t-169000"&&입출력을 같은 공간에서 구현하기 때문에 이런 일이 가능합니다.
id="t-173000"&&이렇게 물리적 수납공간이 디지털 저장공간이 됩니다.
id="t-175000"&&연결 방식은 실제 물건을 실제 용기에 담는 것과 같습니다.
id="t-180000"&&뭘 넣던지 나와야 합니다.
id="t-183000"&&이 작은 디자인 실험에는 또 다른 트릭들이 있습니다.
id="t-188000"&&만약 체스판을 예로 들면 이 시스템은 그것이 어떤 의미인지 이해하려고 합니다.
id="t-192000"&&그리고 할 수 없게 되면 체스말들은 갑자기 지루해져서 어디론가 가버립니다.

id="t-198000"&&이 일을 감독한 학자들은 이것이 너무 하찮다고 생각했습니다.
id="t-203000"&&그래서 우리는 매우 진지한 응용을 했습니다.
id="t-205000"&&이 광학 원형 작업대 처럼요.
id="t-207000"&&골판지 상자에 붙어 있는 치약 뚜껑이 레이저가 됩니다.
id="t-212000"&&이 광선은 분산되고 굴절되어 실제와 같이 작용되고. 시스템은 이 레이저 빔의 경로를 표시합니다.
id="t-218000"&&이렇게 인터페이스가 없는 인터페이스가 제공됩니다.
id="t-220000"&&여러분은 마치 현실세계처럼 자신의 손으로 조작할 수 있습니다.
id="t-225000"&&마찬가지로 디지털 풍동도 가능합니다.
id="t-227000"&&바람이 오른쪽에서 왼쪽으로 붑니다.
id="t-229000"&&새 이론을 만든 게 아니어서 그리 대단한 얘기가 없습니다만 CRT나 평면 디스플레이에 표시하는 경우에 이 타원형 물체를 올려둔다면 실제 물건을 둔 것 같은 의미가 있습니다.
id="t-239000"&&실제와 가상이 섞여 있는 것입니다.

id="t-243000"&&마지막으로 이 모든 것을 도입해서 Urp라고 불리우는 도시 계획용 시스템을 만들었고 모형 건축가와 도시 계획자들들이 CAD시스템을 사용하던 것들로부터 빼앗아서 그들의 손으로 직접 하도록 되돌려 주자는 것입니다.
id="t-255000"&&머신이 현실을 반만 보상해 디지털 그림자를 표시합니다.
id="t-260000"&&그리고 시계 도구를 데려와 하늘에 있는 태양의 위치를 조정할 수 있습니다.
id="t-265000"&&이것은 오전 8시의 그림자입니다.
id="t-267000"&&9시에는 그림자가 조금 짧아집니다.
id="t-269000"&&이렇게 해서 태양을 움직일 수 있습니다.
id="t-271000"&&정오에는 그림자가 많이 작아집니다.
id="t-275000"&&이렇게 우리는 많은 도구를 만들어 포함시켰습니다.
id="t-278000"&&이 도구로 아이들도 그늘의 영향을 고려할 수 있습니다.
id="t-282000"&&도시 계획에 대해서 아무것도 몰라도 됩니다.
id="t-284000"&&건물을 움직이려면 단순히 손으로 옮기면 됩니다.
id="t-287000"&&material 막대기를 사용해서 프랭크 게리의 작품 처럼 빛을 반사시킵니다.
id="t-292000"&&건물이 행인이나 도로를 달리는 운전자의 시야를 눈부시게 하진 않는지 파티션 도구는 떨어져 있는 건물과 도로를 연결합니다.
id="t-298000"&&도시계획위원회에 고소한다면 이런 아이디어가 친숙하다면 또는 오래된 것 처럼 느껴진다면 이건 대단한 것입니다.

id="t-308000"&&이 프로젝트는 15년간 연구되어 왔습니다.
id="t-311000"&&이것은 MIT 미디어 랩에서 Tangible 미디어 그룹의 감독인 히로시 이시이 교수의 훌륭한 지도를 받아 만들어졌습니다.
id="t-319000"&&그리고 이것이 세계적으로 유명한 프로적션 디자이너인 알렉스 맥도웰의 눈에 띄었습니다.
id="t-326000"&&그떄 알렉스는 막연한 인디 실험 영화를 준비중이었습니다.
id="t-329000"&&스티븐 스필버그의 마이너리티 리포트였죠.
id="t-332000"&&그는 우리를 초청해서 MIT로부터 나와 영화에 나오는 인터페이스를 디자인하게 했습니다 이것은 대단한 일이었습니다.
id="t-342000"&&알렉스는 열심히 노력하고 있었고 영화에 그려지는 2054년 세계를 최대한 리얼하게 그려내고자 했습니다.
id="t-351000"&&그래서 그는 우리를 디자인 작업에 R&amp;D 외주로 참여시켰습니다.
id="t-355000"&&그리고 그 결과는 아주 만족스러웠습니다.
id="t-359000"&&사람들은 아직도 새로운 UI 디자인의 설계를 얘기할 때 "마이너리티 리포트"의 장면을 인용합니다.
id="t-364000"&&그리고 이것이 우리를 기묘한 방향으로 한층 높이게 해서 우리가 인터페이스의 필연적인 미래라고 여기고 있는 공간 작업 환경 아이디어로 이어졌습니다.

id="t-377000"&&이제 여기에 수많은 이미지가 있습니다.
id="t-380000"&&그리고 손을 사용해서 우리는 자유롭게 6축 어디로나 움직일 수 있습니다.
id="t-385000"&&전, 후, 좌, 우, 상, 하 말입니다.
id="t-388000"&&베케느 씨는 눈 사이를 이제 여기서 나와서 그때 위협하는 오랑우탄 사이를 돌아갑니다.
id="t-394000"&&이건 아주 좋은 상황입니다.
id="t-397000"&&더 어려운 일을 하자 다양한 이미지가 있습니다.
id="t-402000"&&날아다닐 수 있죠 탐색기능은 기본적인 이슈입니다.
id="t-406000"&&3차원 공간을 탐색할 수 있어야 하죠 우리가 컴퓨터에서 하고자 하는 대부분의 일들이 원래 본질적으로 공간적인 것입니다.
id="t-414000"&&그리고 공간에 있지 않는 것들도 이렇게 공간에 두어 알기 쉽게 할 수 있습니다.
id="t-419000"&&이것은 여러가지 다른 방법으로 배포할 수 있습니다.



id="t-426000"&&물론 탐색 뿐만 아니라 작업도 할 수 있습니다.
id="t-431000"&&만약에 맘에 들지 않는 것이 있거나 흥미로운 것이 있으면 에른스트 해켈의 과학적인 왜곡 같은 것 말이죠.
id="t-438000"&&우리는 뒤로 당겨서 배치를 바꿀고 분석할 수 있습니다.
id="t-443000"&&또 하나의 다른 견해지만요 이것을 정렬시켜봅시다.
id="t-451000"&&그리고 날아다닙니다.
id="t-454000"&&그리고 이건 또 다른 방법으로 보는 건데 좀더 자연스러운 분석을 원한다면 이렇게 할 수도 있습니다.
id="t-461000"&&색상 분포도에 따라서 말이죠.
id="t-464000"&&이제 색상 별로 정렬되어 있습니다.
id="t-467000"&&각도에 따라서 색상별로 나뉘어 있죠 이제 우리가 어떤 것들 3차원 공간에서 선택하기 원한다면 실제 공간에서 하는 것 처럼 손으로 갈라낼 수 있습니다.
id="t-477000"&&이건 매우 중요한 것인데 왜냐하면 같은 작업이 2차원이 아니라 3차원에서 이루어지기 떄문입니다.
id="t-482000"&&여기에 선택 평면이 나타났습니다.
id="t-484000"&&그리고 우리는 불리언 연산을 통해 노란색과 녹색 잔디를 추출해냈습니다.

id="t-499000"&&이젠 실질적인 일의 세계를 살펴봅시다.
id="t-502000"&&여기엔 물류 시스템이 있습니다.
id="t-504000"&&현재 우리가 구축 중입니다.
id="t-506000"&&여기에 많은 것들이 있습니다.
id="t-508000"&&그리고 중요한 것은 전통적인 타뷸러 데이터(2차원 표 구조)와 3차원 공간의 위치 정보를 연결할 수 있다는 겁니다.
id="t-514000"&&이건 친숙하실 겁니다.
id="t-517000"&&이제 이걸 곧장 가져와서 일부를 선택하고 그래프로 옮깁니다.
id="t-526000"&&그리고 이제 우리는 날아다니면서 좀더 상세히 볼 수 있습니다.
id="t-534000"&&이건 물류의 요소들입니다.
id="t-536000"&&미국 전체에 흩어져 있습니다.

id="t-545000"&&3차원 상호작용에 대한 아이디어를 도입하고 계산을 통해 공간에서는 최종적으로 매우 슬프게도 컴퓨터와 사람간 1대1 관계를 가질 수 밖에 없습니다.
id="t-557000"&&이건 구식이죠.
id="t-559000"&&컴퓨터 하나에 사람 하나에 마우스 하나에 화면 하나.
id="t-561000"&&이제 더 이상 그런 것은 없습니다.
id="t-564000"&&현실에서는 사람들이 여럿이서 같이 작업 합니다.
id="t-570000"&&그리고 우리는 여러개의 다른 화면을 갖고 있죠.
id="t-573000"&&작업할 상대가 많습니다.
id="t-576000"&&이제 이런 것을 도울 수 있습니다.

id="t-578000"&&이 새로운 포인팅 장치의 개발자가 저쪽에 앉아 있습니다.
id="t-583000"&&그리고 저는 이것을 저기로부터 저기로 옮길 수 있습니다.
id="t-585000"&&이건 서로 다른 장치간 이뤄지는 일입니다.
id="t-588000"&&처리 공간이 네트워크를 통해 조화를 이루고 있습니다.
id="t-591000"&&이제 저쪽에 두고 봅시다.
id="t-593000"&&폴에게 궁금한 게 있거든요.
id="t-595000"&&폴은 스틱 디자이너이기 때문에 그에게 뭔가 설명해달라고 할 지도 모습니다.
id="t-600000"&&이제 이걸 좀 정리하고 분해해서 떨어뜨려 봅시다.
id="t-611000"&&케빈, 도와줄래요?
id="t-618000"&&설계 기판을 찾아봅시다.
id="t-623000"&&이건 분해 조립 운동 같은 겁니다.
id="t-626000"&&실험실에서 자주 하고 있습니다.
id="t-629000"&&좋습니다.
id="t-631000"&&협업이라는 것은 같은 위치에 있거나 떨어져 있거나 항상 중요한 것입니다.
id="t-637000"&&그리고 이걸 다시 공간 환경에서 이해해 볼 필요가 있습니다.

id="t-644000"&&마지막으로 영상의 세계에서 보여드리고 싶은 게 있습니다.
id="t-649000"&&이건 TAMPER라는 시스템입니다.
id="t-651000"&&이 시스템은 미래의 미디어를 편집하는 작업이 어떻게 될지 보여줄 수 있는 시스템입니다.
id="t-657000"&&Oblong 사는 미디어라는 게 더욱 정밀한 입도에 접근할 수 있도록 해야 한다고 생각합니다.

id="t-666000"&&이중에서 옃개의 요소를 제거합니다.
id="t-669000"&&우리는 이걸 한 데 묶어서 둘 수 있습니다.
id="t-674000"&&이 요소들을 앞으로 끌어내서 영화로부터요 이 테이블 위에 올려 놓습니다.
id="t-684000"&&그리고 잭 타티가 여기 있고 파란 친구를 잡아서 이 아래 테이블에 놓습니다.
id="t-693000"&&한번만 더 해보죠.
id="t-698000"&&아마도 우리에게 카우보이가 필요할 듯 하군요.
id="t-702000"&&솔직히요.
id="t-704000"&&(웃음) 네. 이제 이걸 잡아봅시다.
id="t-704000"&&(웃음) 보시다시피 카우보이와 프랑스인은 잘 어울리지 않습니다.


id="t-720000"&&마지막으로 말씀드리고자 하는 것은 가장 위대한 영문 작가의 말이 아니지만 지난 30년간의 가장 뛰어난 예술은 늘 선물이라는 것입니다.
id="t-731000"&&소설이 24.95달러를 하거나 도난당한 베르메르 그림을 사기 위해 7천만 달러가 필요하다고 하는 것이 아닙니다.
id="t-738000"&&그가 말하고자 하는 것은 예술의 창작에 관한 환경과 앞으로 나아갈 방향에 대해서입니다.
id="t-742000"&&우리는 기술에 대해서도 같은 것을 요구할 때가 왔습니다.
id="t-746000"&&기술은 이제 다양한 가능성으로 가득 채우고 표현할 수 있는 능력이 있습니다 그리고 우리는 실제로 그것을 추구해야 합니다.
id="t-755000"&&기술의 일부가 기술의 중심에서 다양한 디자인의 조합으로 있는 것이 중요합니다.
id="t-763000"&&디자인의 효용과 효과가 처음부터 그 안에 들어있지 않는 한 기술은 앞으로 나갈 수 없습니다.
id="t-772000"&&우리 인류는 창조할 줄 아는 피조물입니다.
id="t-775000"&&그리고 우리는 이 시스템들이 우리 마음의 느낌대로 작업하는 데에 도움이 될 것이라 확신합니다.




id="t-798000"&&크리스 앤더슨: 질문을 하나 하지 않을 수 없습니다.
id="t-801000"&&사실 이건 빌 게이츠가 저에게 부탁한 질문인데요 언제 될까요?


id="t-810000"&&모든 사람들이나 아니면 영화 제작자들이 사용하려면요.

id="t-813000"&&존 언더코플러: 이건 모든 이들을 위한 것입니다.
id="t-815000"&&그것이 우리의 궁극적인 목적이죠.
id="t-817000"&&우리가 큰 발걸음을 내딛지 못한다면 달성해내지 못하겠죠 그렇다면 아마도 25년 쯤 걸릴 것으로 봅니다.
id="t-823000"&&이런 인터페이스가 하나만 있진 않을 껍니다.

id="t-825000"&&크리스 앤더슨: 그렇다면 집이나 책상이나 프로젝터와 카메라가 필요할텐데요.
id="t-830000"&&아시다시피 어떻게 가능하겠습니까?

id="t-832000"&&존 언더코플러: 모든 게 디스플레이에 통합될 겁니다.
id="t-834000"&&아키텍쳐 내로 통합되는 것이죠.
id="t-836000"&&글로브는 몇개월이나 몇년 안에 필요하지 않게 될 껍니다.
id="t-839000"&&이것이 필연적인 방향입니다.

id="t-841000"&&크리스 앤더슨: 그러니까 5년 안에 컴퓨터를 사는 사람들이 기본적으로 이런 것들을 구할 수 있게 된다고 생각하시는 건가요?

id="t-847000"&&존 언더코플러: 저는 5년 내 컴퓨터를 사게 될 경우 그렇게 될 것이라고 생각합니다.

id="t-852000"&&크리스 앤더슨: 이건 정말 멋지군요.
id="t-783000"&&(박수) 세상은 어떻게 이걸 사용하던지 늘 놀라게 될 것입니다.
id="t-861000"&&그렇다면 첫번 째 킬러 앱은 무엇이 될까요?



id="t-867000"&&지금 얼리어답터들에게나 아니면 실제로 사용되는 컴퓨터 시스템에서도 많은 데이터가 저장되어 있는 데이터 센터의 문제를 다루고 있습니다.
id="t-876000"&&물류 공급망이거나 아니면 천연 가스 및 자원 채굴이나 금융 서비스, 제약, 바이오 등이 그렇습니다.





id="t-704000"&&(웃음) 존, 공상 과학을 현실로 만들어주셔서 고맙습니다.

id="t-895000"&&존 언더코플러: 제겐 큰 영광입니다.
id="t-897000"&&여러분 감사합니다.

